#!/usr/bin/env coffee
# server
# cli for the Smallest-Federated-Wiki express server

path = require 'path'
optimist = require 'optimist'
server = require '../'

# Handle command line options

argv = optimist
  .usage('Usage: $0')
  .options('d',
    alias     : 'data'
    default   : ''
    describe  : 'location of flat file data'
  )
  .options('h',
    alias     : 'help'
    boolean   : true
    describe  : 'Show this help info and exit'
  )
  .options('o',
    alias     : 'host'
    default   : ''
    describe  : 'Host to accept connections on, falsy == any'
  )
  .options('p',
    alias     : 'port'
    default   : 3000
    describe  : 'Port'
  )
  .options('r',
    alias     : 'root'
    default   : path.join("#{__dirname}", '..', '..', '..')
    describe  : 'Aplication root folder'
  )
  .argv

if argv.h
  optimist.showHelp()
  process.exit()
if not argv.d
  argv.d = path.relative("#{__dirname}", "#{argv.r}/data")
if not argv.c
  argv.c = path.relative("#{__dirname}", "#{argv.r}/client")
argv.db = path.resolve(path.join(argv.d, 'pages'))
argv.status = path.resolve(path.join(argv.d, 'status'))

# App configuration

server(argv)

# server = module.exports = express.createServer()

###
server.configure( ->
  #app.set('views', '../views')
  #app.register('.haml', require('hamljs'))
  #app.set('view engine', 'haml')
  app.use(express.bodyParser())
  app.use(express.methodOverride())
  app.use(app.router)
  app.use(express.static(argv.c))
)

server.configure('development', ->
  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }))
  argv.debug = console? and true
)

app.configure('production', ->
  app.use(express.errorHandler())
)

app.listen(argv.p, argv.o if argv.o)

console.log("Smallest Federated Wiki server listening on #{app.address().port} in mode: #{app.settings.env}")
###
